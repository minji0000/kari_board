package com.kari.kariboard.service;import com.kari.kariboard.dto.UserDTO;import com.kari.kariboard.entity.UserEntity;import com.kari.kariboard.repository.UserRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import javax.servlet.http.HttpSession;import java.io.UnsupportedEncodingException;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;// 기존에 컨트롤러에서 하던 로직을 다 여기로 옮기자// 비즈니스 로직@Servicepublic class UserService {    @Autowired    private UserRepository userRepository;    /**     * 비밀번호 암호화     */    public String convertSha2(String password) {        String converted = null;        StringBuilder builder = null;        try {            MessageDigest md = MessageDigest.getInstance("SHA-256");            // 암호화해주는 클래스를 통해 암호화를 진행한다.            byte[] hash = md.digest(password.getBytes("UTF-8"));            builder = new StringBuilder();            for(int i = 0; i <hash.length; i++) {                builder.append(String.format("%02x", 255 & hash[i]));            }            converted = builder.toString();            // 에러가 발생하면 그 값을 리턴해주는 메소드        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {            e.printStackTrace();        }        return converted;    }    /**     * 로그인     */    public UserDTO logIn(String username, String password) {        UserDTO u = new UserDTO();        u.setUsername(username);        u.setPassword(convertSha2(password));        // 아이디와 비밀번호가 일치한지 확인        return userRepository.auth(u);    }    /**     * 회원가입     */    public void register(UserDTO u) {        u.setPassword(convertSha2(u.getPassword()));        userRepository.register(u);    }    /**     * 아이디와 비밀번호가 일치한지 확인(중복코드)     */    public UserDTO auth(UserDTO u) {        return userRepository.auth(u);    }}